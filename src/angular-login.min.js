"use strict";var loginControllers=angular.module("angular-login-loginControllers",["angular-login-loginServices"]);loginControllers.controller("loginSignoutCtrl",["$scope","loginAuth","$location","loginConfig",function(a,b,c,d){a.logout=function(){b.loggedOut(),c.path(d.getConfiguration().pathToLogin)}}]),loginControllers.controller("loginSigninCtrl",["$scope","loginAuth","loginToken","loginRedirectToAttemptUrl",function(a,b,c,d){a.error="",a.credentials={username:"",pass:""},a.login=function(){var e=function(b){a.error=b};c.retrieveToken(a.credentials.username,a.credentials.pass).then(function(a){b.loggedIn(a)}).then(function(){e("")}).then(function(){d.redirect()})["catch"](function(){e("Username/password combination provided is incorrect")})}}]);var loginDirectives=angular.module("angular-login-loginDirectives",[]);loginDirectives.directive("loginwelcomeUser",[function(){return{restrict:"E",template:"<div ng-show='auth.isLoggedIn()'><p ng-controller='loginSignoutCtrl'>Hello {{auth.getUsername()}} (<a href='javascript:void(0)' ng-click='logout()'>Logout</a>)</p></div>"}}]);var loginMain=angular.module("angular-login-loginMain",["angular-login-loginControllers","angular-login-loginServices","angular-login-loginDirectives"]),loginServices=angular.module("angular-login-loginServices",["ngStorage","angular-jwt"]);loginServices.service("loginConfig",[function(){this.configuration={tokenApiUrlEndPoint:"http://localhost:8080/api/token",pathToLogin:"/login"},this.setConfiguration=function(a){this.configuration.tokenApiUrlEndPoint=a.tokenApiUrlEndPoint||"",this.configuration.pathToLogin=a.pathToLogin||""},this.getConfiguration=function(){return this.configuration}}]),loginServices.service("loginStorage",["$sessionStorage",function(a){this.getToken=function(){return a.token||""},this.setToken=function(b){a.token=b},this.removeToken=function(){a.token&&delete a.token}}]),loginServices.service("loginToken",["$http","$q","loginConfig",function(a,b,c){this.retrieveToken=function(d,e){var f=b.defer();return a.post(c.getConfiguration().tokenApiUrlEndPoint,{userIdentifier:d,secret:e}).then(function(a){f.resolve(a.data.token)})["catch"](function(){f.reject("")}),f.promise}}]),loginServices.service("loginRedirectToAttemptUrl",["$location","loginConfig",function(a,b){this.redirectToUrlAfterLogin={url:"/"},this.redirect=function(){a.path(this.redirectToUrlAfterLogin.url)},this.saveUrl=function(){b.getConfiguration().pathToLogin.toLowerCase()!=a.path().toLowerCase()&&(this.redirectToUrlAfterLogin.url=a.path())}}]),loginServices.service("loginAuth",["loginStorage","jwtHelper",function(a,b){this.isLoggedIn=function(){return!!a.getToken()},this.loggedIn=function(b){a.setToken(b)},this.loggedOut=function(){a.removeToken()},this.getUsername=function(){return this.isLoggedIn()?b.decodeToken(a.getToken()).unique_name:void 0},this.hasClaim=function(c,d){if(!this.isLoggedIn())return!1;var e=b.decodeToken(a.getToken()),f=e[c]||{};return Array.isArray(f)?f.indexOf(d)>=0:f===d}}]),loginServices.service("loginRequestInterceptor",["loginStorage","$q","$location","loginConfig","loginRedirectToAttemptUrl",function(a,b,c,d,e){this.request=function(b){var c=a.getToken();return b.headers=b.headers||{},c&&(b.headers.Authorization=c),b},this.responseError=function(a){return 401==a.status&&(e.saveUrl(),c.path(d.getConfiguration().pathToLogin)),b.reject(a)}}]);