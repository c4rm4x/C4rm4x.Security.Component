"use strict";var fbLoginDirectives=angular.module("angular-login-fbLoginDirectives",[]);fbLoginDirectives.directive("fbLoginWelcomeUser",["$window","fbLoginConfig","fbLoginAuth",function(a,b,c){return{restrict:"E",link:function(d){d.onlogout=function(){c.logOut(),a.location=b.getConfiguration().logoutUrl},d.onlogin=function(){FB.login()}},template:"<div ng-hide='auth.isLoggedIn()'><button ng-click='onlogin()' class='loginBtn loginBtn--facebook'>Login with Facebook</button></div><div ng-show='auth.isLoggedIn()'><img width='25px' height='25px' ng-src='{{auth.getPicture()}}'><span style='margin: 5px; font-size: 12px; font-weight: bold; color: white;'>{{auth.getUsername()}}</span><div class='btn-group'><button type='button' class='btn btn-xs btn-primary dropdown-toggle dropdown-toggle-split' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'><span class='caret'></span></button><ul class='dropdown-menu'><li><a class='dropdown-item' href='#' ng-click='onlogout()'>Log out</a></li></ul></div></div></div>"}}]);var fbLoginMain=angular.module("angular-login-fbLoginMain",["angular-login-fbLoginServices","angular-login-fbLoginDirectives"]),fbLoginServices=angular.module("angular-login-fbLoginServices",["angular-login-loginServices"]);fbLoginServices.service("fbLoginConfig",["loginConfig",function(a){this.configuration={appId:"appId",channelUrl:"app/channel.html",logoutUrl:"/logout"},this.setConfiguration=function(b){this.configuration.appId=b.appId||"",this.configuration.channelUrl=b.channelUrl||"",this.configuration.logoutUrl=b.logoutUrl||"",a.setConfiguration(b)},this.getConfiguration=function(){return angular.merge({},this.configuration,a.getConfiguration())}}]),fbLoginServices.service("fbLoginAuth",["loginAuth",function(a){this.isLoggedIn=function(){return a.isLoggedIn()},this.loggedIn=function(b){a.loggedIn(b)},this.logOut=function(){a.loggedOut()},this.getUsername=function(){return a.getUsername()},this.getPicture=function(){return a.getClaimValue("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/uri")||""},this.hasClaim=function(b,c){return a.hasClaim(b,c)}}]),fbLoginServices.service("fbLoginEventAggregator",[function(){var a={};this.subscribe=function(b,c){a[b]?a[b].push(c):a[b]=[c]},this.publish=function(b,c){a[b]&&angular.forEach(a[b],function(a){a(c)})}}]),fbLoginServices.service("fbLoginEventHandler",["fbLoginAuth","fbLoginConfig","fbLoginEventAggregator","loginToken",function(a,b,c,d){function e(a,b){c.subscribe(a,b)}var f="ok",g="error";this.init=function(){function e(b){function e(b){d.retrieveToken(b.userID,b.accessToken).then(function(b){a.loggedIn(b)}).then(function(){c.publish(f,b)})["catch"](function(a){c.publish(g,a)})}e(b)}function h(a){"connected"===a.status&&a.authResponse?e(a.authResponse):c.publish(g,a.status)}return FB.init({appId:b.getConfiguration().appId,channelUrl:b.getConfiguration().channelUrl,status:!1,cookie:!0,xfbml:!0}),FB.Event.subscribe("auth.statusChange",function(a){h(a)}),this},this.onSuccess=function(a){return e(f,a),this},this.onFailure=function(a){return e(g,a),this}}]);var loginControllers=angular.module("angular-login-loginControllers",["angular-login-loginServices"]);loginControllers.controller("loginSignoutCtrl",["$scope","loginAuth","$location","loginConfig",function(a,b,c,d){a.logout=function(){b.loggedOut(),c.path(d.getConfiguration().pathToLogin)}}]),loginControllers.controller("loginSigninCtrl",["$scope","loginAuth","loginToken","loginRedirectToAttemptUrl",function(a,b,c,d){a.error="",a.credentials={username:"",pass:""},a.login=function(){var e=function(b){a.error=b};c.retrieveToken(a.credentials.username,a.credentials.pass).then(function(a){b.loggedIn(a)}).then(function(){e("")}).then(function(){d.redirect()})["catch"](function(){e("Username/password combination provided is incorrect")})}}]);var loginDirectives=angular.module("angular-login-loginDirectives",[]);loginDirectives.directive("loginwelcomeUser",[function(){return{restrict:"E",template:"<div ng-show='auth.isLoggedIn()'><p ng-controller='loginSignoutCtrl'>Hello {{auth.getUsername()}} (<a href='javascript:void(0)' ng-click='logout()'>Logout</a>)</p></div>"}}]);var loginMain=angular.module("angular-login-loginMain",["angular-login-loginControllers","angular-login-loginServices","angular-login-loginDirectives"]),loginServices=angular.module("angular-login-loginServices",["ngStorage","angular-jwt","ngCookies"]);loginServices.service("loginConfig",[function(){this.configuration={tokenApiUrlEndPoint:"http://localhost:8080/api/token",pathToLogin:"/login",cookies:{name:"auth",ttl:1}},this.setConfiguration=function(a){this.configuration.tokenApiUrlEndPoint=a.tokenApiUrlEndPoint||"",this.configuration.pathToLogin=a.pathToLogin||"",this.configuration.cookies=a.cookies},this.getConfiguration=function(){return this.configuration}}]),loginServices.service("loginStorage",["$sessionStorage","$cookies","loginConfig",function(a,b,c){this.getToken=function(){var d=a.token;return!d&&c.getConfiguration().cookies&&(d=b.get(c.getConfiguration().cookies.name),d&&(a.token=d)),d||""},this.setToken=function(d){if(a.token=d,c.getConfiguration().cookies){var e=new Date;e.setTime(e.getTime()+60*(c.getConfiguration().cookies.ttl||1)*60*1e3),b.put(c.getConfiguration().cookies.name,d,{expires:e})}},this.removeToken=function(){a.token&&delete a.token,c.getConfiguration().cookies&&b.get(c.getConfiguration().cookies.name)&&b.remove(c.getConfiguration().cookies.name)}}]),loginServices.service("loginToken",["$http","$q","loginConfig",function(a,b,c){this.retrieveToken=function(d,e){var f=b.defer();return a.post(c.getConfiguration().tokenApiUrlEndPoint,{userIdentifier:d,secret:e}).then(function(a){f.resolve(a.data.token)})["catch"](function(a){f.reject(a.data)}),f.promise}}]),loginServices.service("loginRedirectToAttemptUrl",["$location","loginConfig",function(a,b){this.redirectToUrlAfterLogin={url:"/"},this.redirect=function(){a.path(this.redirectToUrlAfterLogin.url)},this.saveUrl=function(){b.getConfiguration().pathToLogin.toLowerCase()!=a.path().toLowerCase()&&(this.redirectToUrlAfterLogin.url=a.path())}}]),loginServices.service("loginAuth",["loginStorage","jwtHelper",function(a,b){this.isLoggedIn=function(){return!!a.getToken()},this.loggedIn=function(b){a.setToken(b)},this.loggedOut=function(){a.removeToken()},this.getUsername=function(){if(this.isLoggedIn())return b.decodeToken(a.getToken()).unique_name},this.getClaimValue=function(c){if(this.isLoggedIn()){var d=b.decodeToken(a.getToken());return d[c]}},this.hasClaim=function(a,b){var c=this.getClaimValue(a);return Array.isArray(c)?c.indexOf(b)>=0:c===b}}]),loginServices.service("loginRequestInterceptor",["loginStorage","$q","$location","loginConfig","loginRedirectToAttemptUrl",function(a,b,c,d,e){this.request=function(b){var c=a.getToken();return b.headers=b.headers||{},c&&(b.headers.Authorization=c),b},this.responseError=function(f){return 401==f.status&&(a.removeToken(),e.saveUrl(),c.path(d.getConfiguration().pathToLogin)),b.reject(f)}}]);